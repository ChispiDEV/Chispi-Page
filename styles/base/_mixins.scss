/* ============================
   MIXINS Y FUNCIONES COMBINADOS
   ============================ */

@use 'sass:color';
@use 'sass:map';
@use 'variables' as vars;

/* ============================
   MIXINS DE TUS ARCHIVOS ORIGINALES
   ============================ */

// Media queries (tus mixins originales)
@mixin mobile {
  @media (max-width: 767px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: 768px) and (max-width: 1023px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 1024px) {
    @content;
  }
}

// Flexbox centering (tus mixins originales)
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Position absolute center (tus mixins originales)
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Text truncation (tus mixins originales)
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Responsive font sizes (tus mixins originales)
@mixin responsive-font($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  font-size: $min-size;

  @media (min-width: $min-width) {
    font-size: calc(#{$min-size} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}) / (#{$max-width} - #{$min-width})));
  }

  @media (min-width: $max-width) {
    font-size: $max-size;
  }
}

// Button reset (tus mixins originales)
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  font: inherit;
  color: inherit;
}

// Focus styles (tus mixins originales)
@mixin focus-outline {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

// Container (tus mixins originales)
@mixin container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;

  @include desktop {
    padding: 0 2rem;
  }
}

// Grid system (tus mixins originales)
@mixin grid($columns: 1, $gap: 1.5rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

/* ============================
   NUEVOS MIXINS MEJORADOS
   ============================ */

// Mixin para modo oscuro (mejorado)
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme="light"]) & {
      @content;
    }
  }

  [data-theme="dark"] & {
    @content;
  }
}

// Mixin para modo claro (nuevo)
@mixin light-mode {
  @media (prefers-color-scheme: light) {
    :root:not([data-theme="dark"]) & {
      @content;
    }
  }

  [data-theme="light"] & {
    @content;
  }
}

// Mixin para transiciones (nuevo)
@mixin transition($property: all, $duration: var(--transition-speed), $timing: var(--ease-in-out)) {
  transition: $property $duration $timing;
}

// Mixin para focus visible (compatible con el tuyo)
@mixin focus-visible {
  &:focus-visible {
    @include focus-outline; // Usa tu mixin existente
  }
}

// Mixin para responsive con breakpoints variables (compatible)
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'mobile' {
    @include mobile {
      @content;
    }
  } @else if $breakpoint == 'tablet' {
    @include tablet {
      @content;
    }
  } @else if $breakpoint == 'desktop' {
    @include desktop {
      @content;
    }
  } @else if $breakpoint == 'xs' {
    @media (max-width: #{vars.$breakpoint-xs - 1px}) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (min-width: vars.$breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (min-width: vars.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: vars.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: vars.$breakpoint-xl) {
      @content;
    }
  }
}

// Mixin para container mejorado (compatible con el tuyo)
@mixin container-responsive {
  @include container; // Usa tu mixin existente

  // Extiende con variables CSS
  max-width: var(--container-lg, 1200px);

  @include respond-to('xl') {
    max-width: var(--container-xl, 1400px);
  }
}

// Mixin para botones (extiende tu button-reset)
@mixin button-base {
  @include button-reset; // Usa tu mixin existente

  // AÃ±ade estilos adicionales
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--btn-padding-y, #{vars.$btn-padding-y}) var(--btn-padding-x, #{vars.$btn-padding-x});
  border-radius: var(--border-radius, #{vars.$border-radius});
  font-weight: var(--font-weight-medium, #{vars.$font-weight-medium});
  line-height: 1;
  text-decoration: none;
  @include transition(background-color);
  @include focus-visible;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Mixin para tarjetas (nuevo)
@mixin card {
  background-color: var(--color-bg-card);
  border-radius: var(--border-radius-lg, #{vars.$border-radius-lg});
  padding: var(--card-padding, #{vars.$card-padding});
  box-shadow: var(--shadow-sm, #{vars.$shadow-sm});
  @include transition(box-shadow);

  &:hover {
    box-shadow: var(--shadow-md, #{vars.$shadow});
  }
}

// Mixin para scrollbar personalizada (nuevo)
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: var(--color-bg-alt);
  }

  &::-webkit-scrollbar-thumb {
    background: var(--color-border);
    border-radius: 3px;

    &:hover {
      background: var(--color-text-muted);
    }
  }
}

// Mixin para temas de accesibilidad (nuevo)
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    :root:not([data-theme="motion"]) & {
      @content;
    }
  }

  [data-theme="reduced-motion"] & {
    @content;
  }
}

@mixin high-contrast {
  [data-theme="high-contrast"] & {
    @content;
  }
}

@mixin grayscale {
  [data-theme="grayscale"] & {
    @content;
  }
}

// Screen reader only
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
